freq_imag_long <- pivot_longer(freq_imag, cols = -VISCODE, names_to = "Variable", values_to = "Frequency")
ggplot(freq_imag_long, aes(x = VISCODE, y = Frequency, color = Variable, group = Variable)) +
geom_line() +
labs(x = "Timepoint (VISCODE)", y = "Number of Measurements", title = "Number of Measurements per Time Point") +
theme(legend.position = "top")
df_biomarkers <- long_dat %>%
select(RID, PTID, VISCODE, APOE4, ABETA, TAU, PTAU, FDG, PIB, AV45)
freq_mark <- df_biomarkers %>%
group_by(VISCODE) %>%
summarise(across(everything(), ~ sum(!is.na(.))))
freq_mark_long <- pivot_longer(freq_mark, cols = -VISCODE, names_to = "Variable", values_to = "Frequency")
ggplot(freq_mark_long, aes(x = VISCODE, y = Frequency, color = Variable, group = Variable)) +
geom_line() +
labs(x = "Timepoint (VISCODE)", y = "Number of Measurements", title = "Number of Measurements per Time Point") +
theme(legend.position = "top")
rm(list= setdiff(ls(), c("long_dat", "wide_dat")))
if (suppressWarnings(!require(tidyverse))) {install.packages("tidyverse"); library(tidyverse)}
if (suppressWarnings(!require(ggplot2))) {install.packages("ggplot2"); library(ggplot2)}
if (suppressWarnings(!require(data.table))) {install.packages("data.table"); library(data.table)}
if (suppressWarnings(!require(formattable))) {install.packages("formattable"); library(formattable)}
knitr::opts_chunk$set(echo = TRUE)
dat <- read.csv("data/ADNIMERGE.csv")
time_test <- function(data, idvar, tvar) {
x <- data[, c(idvar, tvar)] %>% arrange(tvar)
time_dependent <- FALSE
unique_participants <- unique(x[, 1])
for (participant in unique_participants) {
participant_data <- x[x[, 1] == participant, 2]
if (length(unique(participant_data)) > 1) {
time_dependent <- TRUE
break
}
}
if (time_dependent) {
return(data.frame(variable = tvar, status = "Time Dependent"))
} else {
return(data.frame(variable = tvar, status = "Time Independent"))
}
}
results <- data.frame(variable = character(), status = character(), stringsAsFactors = FALSE)
for (col in 1:length(colnames(dat))) {
result <- time_test(dat, "RID", colnames(dat)[col])
results <- rbind(results, result)
}
excluded_vars <- c("SITE","COLPROT","ORIGPROT","FLDSTRENG",
"FSVERSION","IMAGEUID", "Month_bl","Month","M",
"update_stamp", "FSVERSION_bl", "FLDSTRENG_bl",
"EXAMDATE_bl", "EXAMDATE", "Years_bl")
ivars <- subset(results, status=="Time Independent") %>%
subset(!(variable %in% excluded_vars)) %>% subset(select=variable)
nivars <- subset(results, status=="Time Dependent") %>%
subset(!(variable %in% excluded_vars)) %>% subset(select=variable)
rm(results, result, col)
long_dat <- dat[, c(ivars[,1], nivars[,1])] %>%
mutate(VISCODE = match(VISCODE, c("bl", "m03", "m06", "m12", "m18", "m24",
"m30","m36", "m42", "m48", "m54", "m60",
"m66", "m72","m78", "m84", "m90", "m96",
"m102", "m108","m114", "m120", "m126",
"m132", "m144", "m156"))-1) %>%
relocate(RID, PTID, VISCODE) %>%
arrange(RID, VISCODE)
baseline_vars <- long_dat %>%
select(c("VISCODE","PTID",ends_with("_bl"),ends_with("_BL"))) %>%
filter(VISCODE == 0) %>%
subset(select = -c(DX_bl, VISCODE)) %>%
rename(LDELTOTAL_bl = LDELTOTAL_BL)
baseline_commplementary_vars <- long_dat %>%
subset(select = c(VISCODE, DX, CDRSB, ADAS11, ADAS13, ADASQ4,MMSE,
RAVLT_immediate,RAVLT_learning,RAVLT_forgetting,RAVLT_perc_forgetting,
LDELTOTAL,DIGITSCOR,TRABSCOR,FAQ,mPACCdigit,mPACCtrailsB,Ventricles,
Hippocampus,WholeBrain,Entorhinal,Fusiform,MidTemp,ICV,MOCA,EcogPtMem,
EcogPtLang,EcogPtVisspat,EcogPtPlan,EcogPtOrgan,EcogPtDivatt,EcogPtTotal,
EcogSPMem,EcogSPLang,EcogSPVisspat,EcogSPPlan,EcogSPOrgan,EcogSPDivatt,
EcogSPTotal,ABETA,TAU,PTAU,FDG,PIB,AV45)) %>%
filter(VISCODE == 0) %>%
subset(select = -c(DX, VISCODE))
length(colnames(baseline_vars)) == length(colnames(baseline_commplementary_vars))
all.equal(baseline_vars, baseline_commplementary_vars)
baseline_commplementary_col_names <- colnames(baseline_commplementary_vars)
long_dat <- long_dat %>%
left_join(baseline_vars, by = "PTID", suffix = c("", "_bl")) %>%
mutate(across(all_of(baseline_commplementary_col_names), ~ coalesce(., get(paste0(cur_column(), "_bl"))))) %>%
select(-ends_with("_bl"), -ends_with("_BL")) %>%
mutate(
RID = as.factor(RID),
PTID = as.character(PTID),
VISCODE = as.factor(VISCODE),
AGE = as.numeric(AGE),
PTGENDER = as.factor(PTGENDER),
PTEDUCAT = as.integer(PTEDUCAT),
PTETHCAT = as.factor(PTETHCAT),
PTRACCAT = as.factor(PTRACCAT),
PTMARRY = as.factor(PTMARRY),
APOE4 = as.integer(APOE4),
FDG = as.numeric(FDG),
PIB = as.numeric(PIB),
AV45 = as.numeric(AV45),
ABETA = as.numeric(ABETA),
TAU = as.numeric(TAU),
PTAU = as.numeric(PTAU),
CDRSB = as.numeric(CDRSB),
ADAS11 = as.numeric(ADAS11),
ADAS13 = as.numeric(ADAS13),
ADASQ4 = as.integer(ADASQ4),
MMSE = as.integer(MMSE),
RAVLT_immediate = as.integer(RAVLT_immediate),
RAVLT_learning = as.integer(RAVLT_learning),
RAVLT_forgetting = as.integer(RAVLT_forgetting),
RAVLT_perc_forgetting = as.numeric(RAVLT_perc_forgetting),
LDELTOTAL = as.integer(LDELTOTAL),
DIGITSCOR = as.integer(DIGITSCOR),
TRABSCOR = as.integer(TRABSCOR),
FAQ = as.integer(FAQ),
MOCA = as.integer(MOCA),
EcogPtMem = as.numeric(EcogPtMem),
EcogPtLang = as.numeric(EcogPtLang),
EcogPtVisspat = as.numeric(EcogPtVisspat),
EcogPtPlan = as.numeric(EcogPtPlan),
EcogPtOrgan = as.numeric(EcogPtOrgan),
EcogPtDivatt = as.numeric(EcogPtDivatt),
EcogPtTotal = as.numeric(EcogPtTotal),
EcogSPMem = as.numeric(EcogSPMem),
EcogSPLang = as.numeric(EcogSPLang),
EcogSPVisspat = as.numeric(EcogSPVisspat),
EcogSPPlan = as.numeric(EcogSPPlan),
EcogSPOrgan = as.numeric(EcogSPOrgan),
EcogSPDivatt = as.numeric(EcogSPDivatt),
EcogSPTotal = as.numeric(EcogSPTotal),
Ventricles = as.integer(Ventricles),
Hippocampus = as.integer(Hippocampus),
WholeBrain = as.integer(WholeBrain),
Entorhinal = as.integer(Entorhinal),
Fusiform = as.integer(Fusiform),
MidTemp = as.integer(MidTemp),
ICV = as.integer(ICV),
DX = as.factor(DX),
mPACCdigit = as.numeric(mPACCdigit),
mPACCtrailsB = as.numeric(mPACCtrailsB)
)
ivars <- ivars %>% filter(!str_detect(variable, "_bl|_BL") & variable != "DX_bl") %>%
pull(variable) %>%
as.character()
nivars <- nivars %>%
filter(! str_detect(variable, "VISCODE")) %>%
pull(variable) %>%
as.character()
wide_dat <- pivot_wider(
long_dat,
id_cols = all_of(ivars),
names_from = "VISCODE",
values_from = all_of(nivars),
values_fn = list(n = n_distinct),
names_sep = "_"
)
head(wide_dat)
frequency_table <- long_dat %>%
group_by(VISCODE) %>%
summarise(NumParticipants = n_distinct(RID))
barplot(frequency_table$NumParticipants~frequency_table$VISCODE, xlab="Time", ylab="Number of Patients Measured",
main="Attrition Plot")
df_demographics <- long_dat %>%
select(RID, PTID, VISCODE, AGE, PTGENDER, PTEDUCAT, PTETHCAT, PTRACCAT, PTMARRY)
freq_dem <- df_demographics %>%
group_by(VISCODE) %>%
summarise(across(everything(), ~ sum(!is.na(.))))
freq_dem_long <- pivot_longer(freq_dem, cols = -VISCODE, names_to = "Variable", values_to = "Frequency")
ggplot(freq_dem_long, aes(x = VISCODE, y = Frequency, color = Variable, group = Variable)) +
geom_line() +
labs(x = "Timepoint (VISCODE)", y = "Number of Measurements", title = "Number of Measurements per Time Point") +
theme(legend.position = "top")
df_cognitive_tests <- long_dat %>%
select(RID, PTID, VISCODE, CDRSB, ADAS11, ADAS13, ADASQ4, MMSE,
RAVLT_immediate, RAVLT_learning, RAVLT_forgetting, RAVLT_perc_forgetting,
LDELTOTAL, DIGITSCOR, TRABSCOR, FAQ, MOCA,
EcogPtMem, EcogPtLang, EcogPtVisspat, EcogPtPlan, EcogPtOrgan, EcogPtDivatt, EcogPtTotal,
EcogSPMem, EcogSPLang, EcogSPVisspat, EcogSPPlan, EcogSPOrgan, EcogSPDivatt, EcogSPTotal)
freq_cog <- df_cognitive_tests %>%
group_by(VISCODE) %>%
summarise(across(everything(), ~ sum(!is.na(.))))
freq_cog_long <- pivot_longer(freq_cog, cols = -VISCODE, names_to = "Variable", values_to = "Frequency")
ggplot(freq_cog_long, aes(x = VISCODE, y = Frequency, color = Variable, group = Variable)) +
geom_line() +
labs(x = "Timepoint (VISCODE)", y = "Number of Measurements", title = "Number of Measurements per Time Point") +
theme(legend.position = "top")
df_biomedical_imaging <- long_dat %>%
select(RID, PTID, VISCODE, Ventricles, Hippocampus, WholeBrain, Entorhinal, Fusiform, MidTemp, ICV)
freq_imag <- df_biomedical_imaging %>%
group_by(VISCODE) %>%
summarise(across(everything(), ~ sum(!is.na(.))))
freq_imag_long <- pivot_longer(freq_imag, cols = -VISCODE, names_to = "Variable", values_to = "Frequency")
ggplot(freq_imag_long, aes(x = VISCODE, y = Frequency, color = Variable, group = Variable)) +
geom_line() +
labs(x = "Timepoint (VISCODE)", y = "Number of Measurements", title = "Number of Measurements per Time Point") +
theme(legend.position = "top")
df_biomarkers <- long_dat %>%
select(RID, PTID, VISCODE, APOE4, ABETA, TAU, PTAU, FDG, PIB, AV45)
freq_mark <- df_biomarkers %>%
group_by(VISCODE) %>%
summarise(across(everything(), ~ sum(!is.na(.))))
freq_mark_long <- pivot_longer(freq_mark, cols = -VISCODE, names_to = "Variable", values_to = "Frequency")
ggplot(freq_mark_long, aes(x = VISCODE, y = Frequency, color = Variable, group = Variable)) +
geom_line() +
labs(x = "Timepoint (VISCODE)", y = "Number of Measurements", title = "Number of Measurements per Time Point") +
theme(legend.position = "top")
```{r}
rm(list= setdiff(ls(), c("long_dat", "wide_dat")))
# Read in the PGS send to us by Rick
pgs <- readr::read_tsv("ADNI_PRS_results_EA_EA22.tsv")
View(pgs)
View(pgs)
View(wide_dat)
merge?
?merge
View(long_dat)
View(pgs)
long_dat <- merge(long_dat, pgs,by.x="PTID",by.y="SampleID")
View(long_dat)
wide_dat <- merge((wide_dat, pgs,by.x="PTID",by.y="SampleID"))
wide_dat <- merge(wide_dat, pgs,by.x="PTID",by.y="SampleID")
View(wide_dat)
View(pgs)
mean(long_dat$PTEDUCAT)
mean(pgs$EA)
mean(pgs$EA22)
# Get new data frame with only those participants
df_long <- filter("EA" != NA)
# Get new data frame with only those participants
df_long <- long_dat %>% filter("EA" != NA)
View(df_long)
# Get new data frame with only those participants
df_long <- long_dat %>% filter("EA" != is.na
# Get new data frame with only those participants
df_long <- long_dat %>% filter("EA" != is.na)
# Get new data frame with only those participants
df_long <- long_dat %>% filter("EA" != is.na)
# Get new data frame with only those participants
df_long <- long_dat %>% subset(EA != is.na)
# Get new data frame with only those participants
df_long <- subset(long_dat, EA != is.na)
# Get new data frame with only those participants
df_long <- filter(!is.na(EA))
# Get new data frame with only those participants
df_long <- long_dat %>% filter(!is.na(EA))
View(df_long)
is.na(long_dat$EA)
count(is.na(long_dat$EA))
length(which(long_dat$EA==NA))
unique(pgs)
unique(pgs$EA)
View(pgs)
View(pgs)
View(wide_dat)
df_wide <- wide_dat %>% filter(!is.na(EA))
View(df_wide)
length(unique(long_dat$PTID))
if (suppressWarnings(!require(tidyverse))) {install.packages("tidyverse"); library(tidyverse)}
if (suppressWarnings(!require(ggplot2))) {install.packages("ggplot2"); library(ggplot2)}
if (suppressWarnings(!require(data.table))) {install.packages("data.table"); library(data.table)}
if (suppressWarnings(!require(formattable))) {install.packages("formattable"); library(formattable)}
knitr::opts_chunk$set(echo = TRUE)
dat <- read.csv("data/ADNIMERGE.csv")
time_test <- function(data, idvar, tvar) {
x <- data[, c(idvar, tvar)] %>% arrange(tvar)
time_dependent <- FALSE
unique_participants <- unique(x[, 1])
for (participant in unique_participants) {
participant_data <- x[x[, 1] == participant, 2]
if (length(unique(participant_data)) > 1) {
time_dependent <- TRUE
break
}
}
if (time_dependent) {
return(data.frame(variable = tvar, status = "Time Dependent"))
} else {
return(data.frame(variable = tvar, status = "Time Independent"))
}
}
results <- data.frame(variable = character(), status = character(), stringsAsFactors = FALSE)
for (col in 1:length(colnames(dat))) {
result <- time_test(dat, "RID", colnames(dat)[col])
results <- rbind(results, result)
}
excluded_vars <- c("SITE","COLPROT","ORIGPROT","FLDSTRENG",
"FSVERSION","IMAGEUID", "Month_bl","Month","M",
"update_stamp", "FSVERSION_bl", "FLDSTRENG_bl",
"EXAMDATE_bl", "EXAMDATE", "Years_bl")
ivars <- subset(results, status=="Time Independent") %>%
subset(!(variable %in% excluded_vars)) %>% subset(select=variable)
nivars <- subset(results, status=="Time Dependent") %>%
subset(!(variable %in% excluded_vars)) %>% subset(select=variable)
rm(results, result, col)
long_dat <- dat[, c(ivars[,1], nivars[,1])] %>%
mutate(VISCODE = match(VISCODE, c("bl", "m03", "m06", "m12", "m18", "m24",
"m30","m36", "m42", "m48", "m54", "m60",
"m66", "m72","m78", "m84", "m90", "m96",
"m102", "m108","m114", "m120", "m126",
"m132", "m144", "m156"))-1) %>%
relocate(RID, PTID, VISCODE) %>%
arrange(RID, VISCODE)
length(unique(long_dat$PTID))
length(unique(long_dat$RID))
baseline_vars <- long_dat %>%
select(c("VISCODE","PTID",ends_with("_bl"),ends_with("_BL"))) %>%
filter(VISCODE == 0) %>%
subset(select = -c(DX_bl, VISCODE)) %>%
rename(LDELTOTAL_bl = LDELTOTAL_BL)
baseline_commplementary_vars <- long_dat %>%
subset(select = c(VISCODE, DX, CDRSB, ADAS11, ADAS13, ADASQ4,MMSE,
RAVLT_immediate,RAVLT_learning,RAVLT_forgetting,RAVLT_perc_forgetting,
LDELTOTAL,DIGITSCOR,TRABSCOR,FAQ,mPACCdigit,mPACCtrailsB,Ventricles,
Hippocampus,WholeBrain,Entorhinal,Fusiform,MidTemp,ICV,MOCA,EcogPtMem,
EcogPtLang,EcogPtVisspat,EcogPtPlan,EcogPtOrgan,EcogPtDivatt,EcogPtTotal,
EcogSPMem,EcogSPLang,EcogSPVisspat,EcogSPPlan,EcogSPOrgan,EcogSPDivatt,
EcogSPTotal,ABETA,TAU,PTAU,FDG,PIB,AV45)) %>%
filter(VISCODE == 0) %>%
subset(select = -c(DX, VISCODE))
length(colnames(baseline_vars)) == length(colnames(baseline_commplementary_vars))
all.equal(baseline_vars, baseline_commplementary_vars)
baseline_commplementary_col_names <- colnames(baseline_commplementary_vars)
long_dat <- long_dat %>%
left_join(baseline_vars, by = "PTID", suffix = c("", "_bl")) %>%
mutate(across(all_of(baseline_commplementary_col_names), ~ coalesce(., get(paste0(cur_column(), "_bl"))))) %>%
select(-ends_with("_bl"), -ends_with("_BL")) %>%
mutate(
RID = as.factor(RID),
PTID = as.character(PTID),
VISCODE = as.factor(VISCODE),
AGE = as.numeric(AGE),
PTGENDER = as.factor(PTGENDER),
PTEDUCAT = as.integer(PTEDUCAT),
PTETHCAT = as.factor(PTETHCAT),
PTRACCAT = as.factor(PTRACCAT),
PTMARRY = as.factor(PTMARRY),
APOE4 = as.integer(APOE4),
FDG = as.numeric(FDG),
PIB = as.numeric(PIB),
AV45 = as.numeric(AV45),
ABETA = as.numeric(ABETA),
TAU = as.numeric(TAU),
PTAU = as.numeric(PTAU),
CDRSB = as.numeric(CDRSB),
ADAS11 = as.numeric(ADAS11),
ADAS13 = as.numeric(ADAS13),
ADASQ4 = as.integer(ADASQ4),
MMSE = as.integer(MMSE),
RAVLT_immediate = as.integer(RAVLT_immediate),
RAVLT_learning = as.integer(RAVLT_learning),
RAVLT_forgetting = as.integer(RAVLT_forgetting),
RAVLT_perc_forgetting = as.numeric(RAVLT_perc_forgetting),
LDELTOTAL = as.integer(LDELTOTAL),
DIGITSCOR = as.integer(DIGITSCOR),
TRABSCOR = as.integer(TRABSCOR),
FAQ = as.integer(FAQ),
MOCA = as.integer(MOCA),
EcogPtMem = as.numeric(EcogPtMem),
EcogPtLang = as.numeric(EcogPtLang),
EcogPtVisspat = as.numeric(EcogPtVisspat),
EcogPtPlan = as.numeric(EcogPtPlan),
EcogPtOrgan = as.numeric(EcogPtOrgan),
EcogPtDivatt = as.numeric(EcogPtDivatt),
EcogPtTotal = as.numeric(EcogPtTotal),
EcogSPMem = as.numeric(EcogSPMem),
EcogSPLang = as.numeric(EcogSPLang),
EcogSPVisspat = as.numeric(EcogSPVisspat),
EcogSPPlan = as.numeric(EcogSPPlan),
EcogSPOrgan = as.numeric(EcogSPOrgan),
EcogSPDivatt = as.numeric(EcogSPDivatt),
EcogSPTotal = as.numeric(EcogSPTotal),
Ventricles = as.integer(Ventricles),
Hippocampus = as.integer(Hippocampus),
WholeBrain = as.integer(WholeBrain),
Entorhinal = as.integer(Entorhinal),
Fusiform = as.integer(Fusiform),
MidTemp = as.integer(MidTemp),
ICV = as.integer(ICV),
DX = as.factor(DX),
mPACCdigit = as.numeric(mPACCdigit),
mPACCtrailsB = as.numeric(mPACCtrailsB)
)
length(unique(long_dat$RID))
ivars <- ivars %>% filter(!str_detect(variable, "_bl|_BL") & variable != "DX_bl") %>%
pull(variable) %>%
as.character()
nivars <- nivars %>%
filter(! str_detect(variable, "VISCODE")) %>%
pull(variable) %>%
as.character()
wide_dat <- pivot_wider(
long_dat,
id_cols = all_of(ivars),
names_from = "VISCODE",
values_from = all_of(nivars),
values_fn = list(n = n_distinct),
names_sep = "_"
)
head(wide_dat)
length(unique(long_dat$RID))
length(unique(wide_dat$RID))
frequency_table <- long_dat %>%
group_by(VISCODE) %>%
summarise(NumParticipants = n_distinct(RID))
barplot(frequency_table$NumParticipants~frequency_table$VISCODE, xlab="Time", ylab="Number of Patients Measured",
main="Attrition Plot")
df_demographics <- long_dat %>%
select(RID, PTID, VISCODE, AGE, PTGENDER, PTEDUCAT, PTETHCAT, PTRACCAT, PTMARRY)
freq_dem <- df_demographics %>%
group_by(VISCODE) %>%
summarise(across(everything(), ~ sum(!is.na(.))))
freq_dem_long <- pivot_longer(freq_dem, cols = -VISCODE, names_to = "Variable", values_to = "Frequency")
ggplot(freq_dem_long, aes(x = VISCODE, y = Frequency, color = Variable, group = Variable)) +
geom_line() +
labs(x = "Timepoint (VISCODE)", y = "Number of Measurements", title = "Number of Measurements per Time Point") +
theme(legend.position = "top")
df_cognitive_tests <- long_dat %>%
select(RID, PTID, VISCODE, CDRSB, ADAS11, ADAS13, ADASQ4, MMSE,
RAVLT_immediate, RAVLT_learning, RAVLT_forgetting, RAVLT_perc_forgetting,
LDELTOTAL, DIGITSCOR, TRABSCOR, FAQ, MOCA,
EcogPtMem, EcogPtLang, EcogPtVisspat, EcogPtPlan, EcogPtOrgan, EcogPtDivatt, EcogPtTotal,
EcogSPMem, EcogSPLang, EcogSPVisspat, EcogSPPlan, EcogSPOrgan, EcogSPDivatt, EcogSPTotal)
freq_cog <- df_cognitive_tests %>%
group_by(VISCODE) %>%
summarise(across(everything(), ~ sum(!is.na(.))))
freq_cog_long <- pivot_longer(freq_cog, cols = -VISCODE, names_to = "Variable", values_to = "Frequency")
ggplot(freq_cog_long, aes(x = VISCODE, y = Frequency, color = Variable, group = Variable)) +
geom_line() +
labs(x = "Timepoint (VISCODE)", y = "Number of Measurements", title = "Number of Measurements per Time Point") +
theme(legend.position = "top")
df_biomedical_imaging <- long_dat %>%
select(RID, PTID, VISCODE, Ventricles, Hippocampus, WholeBrain, Entorhinal, Fusiform, MidTemp, ICV)
freq_imag <- df_biomedical_imaging %>%
group_by(VISCODE) %>%
summarise(across(everything(), ~ sum(!is.na(.))))
freq_imag_long <- pivot_longer(freq_imag, cols = -VISCODE, names_to = "Variable", values_to = "Frequency")
ggplot(freq_imag_long, aes(x = VISCODE, y = Frequency, color = Variable, group = Variable)) +
geom_line() +
labs(x = "Timepoint (VISCODE)", y = "Number of Measurements", title = "Number of Measurements per Time Point") +
theme(legend.position = "top")
df_biomarkers <- long_dat %>%
select(RID, PTID, VISCODE, APOE4, ABETA, TAU, PTAU, FDG, PIB, AV45)
freq_mark <- df_biomarkers %>%
group_by(VISCODE) %>%
summarise(across(everything(), ~ sum(!is.na(.))))
freq_mark_long <- pivot_longer(freq_mark, cols = -VISCODE, names_to = "Variable", values_to = "Frequency")
ggplot(freq_mark_long, aes(x = VISCODE, y = Frequency, color = Variable, group = Variable)) +
geom_line() +
labs(x = "Timepoint (VISCODE)", y = "Number of Measurements", title = "Number of Measurements per Time Point") +
theme(legend.position = "top")
rm(list= setdiff(ls(), c("long_dat", "wide_dat")))
# Read in the PGS send to us by Rick
pgs <- readr::read_tsv("ADNI_PRS_results_EA_EA22.tsv")
# Merge the EA data with the corresponding participant in each data frame
long_dat <- merge(long_dat, pgs,by.x="PTID",by.y="SampleID")
wide_dat <- merge(wide_dat, pgs,by.x="PTID",by.y="SampleID")
View(pgs)
30*0.72
30*pgs$EA22[2]
30*pgs$EA22[1]
30*pgs$EA22[3]
View(long_dat)
ggplot(long_dat, aes(x = PTEDUCAT, y = EA22)) +
geom_point() +  # Add points
geom_smooth(method = "lm", se = FALSE) +  # Add linear regression line
labs(x = "Years of Education", y = "EA22") +  # Set axis labels
ggtitle("EA22 vs Years of Education")  # Set plot title
ggplot(long_dat, aes(x = PTEDUCAT, y = EA22)) +
geom_point() +  # Add points
geom_smooth(method = "lm", se = TRUE) +  # Add linear regression line
labs(x = "Years of Education", y = "EA22") +  # Set axis labels
ggtitle("EA22 vs Years of Education")  # Set plot titl# Generate difference scores
ggplot(long_dat, aes(x = PTEDUCAT, y = EA22)) +
geom_point() +  # Add points
geom_smooth(method = "lm", se = TRUE) +  # Add linear regression line
labs(x = "Years of Education", y = "EA22") +  # Set axis labels
ggtitle("EA22 vs Years of Education")  # Set plot titl# Generate difference scores
lm(EA22~PTEDUCAT+AGE+PTGENDER,data=long_dat)
res <- lm(EA22~PTEDUCAT+AGE+PTGENDER,data=long_dat)
View(res)
rstandard(res)
rstandard(res$residuals)
?rstandard
rstandard(res)
res$residuals
length(res$residuals)
results <- lm(EA22~PTEDUCAT+AGE+PTGENDER,data=long_dat)
res <- rstandard(results)
long_dat$res <- rstandard(results)
# Create histogram
ggplot(long_dat, aes(x = res)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black") +
labs(x = "My Variable", y = "Frequency") +
ggtitle("Distribution of My Variable (Histogram)")
# Create density plot
ggplot(long_dat, aes(x = res)) +
geom_density(fill = "blue", alpha = 0.5) +
labs(x = "My Variable", y = "Density") +
ggtitle("Distribution of My Variable (Density Plot)")
# Create density plot
ggplot(long_dat, aes(x = res)) +
geom_density(fill = "pink", alpha = 0.5) +
labs(x = "My Variable", y = "Density") +
ggtitle("Distribution of My Variable (Density Plot)")
# Create density plot
ggplot(long_dat, aes(x = res)) +
geom_density(fill = "orange", alpha = 0.5) +
labs(x = "My Variable", y = "Density") +
ggtitle("Distribution of My Variable (Density Plot)")
# Create density plot of the residuals
ggplot(long_dat, aes(x = res)) +
geom_density(fill = "orange", alpha = 0.5) +
labs(x = "Residual Score", y = "Density") +
ggtitle("Distribution of Residuals")
