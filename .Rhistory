survfit(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_PGS, data = .)
# Create the Kaplan-Meier survival plot
plot(surv_fit,
main = "Kaplan-Meier Survival Curve (Overachiever)",
xlab = "Time",
ylab = "Survival Probability",
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2,
xlim = c(0, 10),
cex.main = 0.95)
legend("bottomleft",
legend = c("Low PGS", "Middle PGS", "High PGS"),
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2)
axis(1, lwd = 1)  # Change x-axis thickness
axis(2, lwd = 1)  # Change y-axis thickness
# Log Rank Test
logrank_test$MMSE_PGS_high <- long_dat %>%
filter(as.integer(VISCODE) <= 9,
thirtile_PGS != 2,
thirtile_res==3) %>% # High PGS
survdiff(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_PGS, data = .)
logrank_test$MMSE_PGS_high
logrank_test$MMSE_PGS_mid
logrank_test$MMSE_PGS_low
logrank_test$MMSE_res_low
logrank_test$MMSE_res_mid
logrank_test$MMSE_res_high
library(nlme)
model1 <- lme(MMSE_norm~EA22+AGE+PTGENDER + AGE*PTGENDER||RID, data=long_dat)
model1 <- lme(MMSE_norm~EA22+AGE+PTGENDER + AGE*PTGENDER|RID, data=long_dat)
model1 <- lme(MMSE_norm~EA22+AGE+PTGENDER | RID, data=long_dat)
model1 <- lme(MMSE_norm~EA22+AGE+PTGENDER + | RID, data=long_dat)
model1 <- lme(MMSE_norm~EA22+AGE+PTGENDER | RID, data=long_dat)
model1 <- lme(MMSE_norm~EA22*VISCODE+AGE+PTGENDER + AGE*PTGENDER|RID, data=long_dat)
model1 <- lme(MMSE_norm~EA22*VISCODE+AGE+PTGENDER + AGE*PTGENDER(|RID), data=long_dat)
model1 <- lme(MMSE_norm~EA22*VISCODE+AGE+PTGENDER + AGE*PTGENDER|RID, data=long_dat)
help(lme)
model1 <- lme(MMSE_norm~EA22*VISCODE+AGE+PTGENDER + AGE*PTGENDER|as.numeric(RID), data=long_dat)
long_dat$RID <- as.numeric(long_dat$RID)
model1 <- lme(MMSE_norm~EA22*VISCODE+AGE+PTGENDER + AGE*PTGENDER|RID, data=long_dat)
model1 <- lme(MMSE_norm~EA22*VISCODE|RID, data=long_dat)
typeof(long_dat$RID)
long_dat$RID <- as.character(long_dat$RID)
model1 <- lme(MMSE_norm~EA22*VISCODE|RID, data=long_dat)
typeof(long_dat$RID)
long_dat$MMSE_norm
long_dat$EA22
long_dat$VISCODE
long_dat$VISCODE <- as.numeric(long_dat$VISCODE)
model1 <- lme(MMSE_norm~EA22*VISCODE+random=~1|RID, data=long_dat)
model1 <- lme(MMSE_norm~EA22*VISCODE+random = ~1|RID, data=long_dat)
model1 <- lme(MMSE_norm~EA22*VISCODE, random = ~1|RID, data=long_dat)
model1
summary(model1)
model2 <- lme(MMSE_norm~PTEDUCAT*VISCODE, random = ~1|RID, data=long_dat)
summary(model2)
model1 <- lme(MMSE_norm~EA22*VISCODE+AGE+PTGENDER + AGE*PTGENDER, random = ~1|RID, data=long_dat)
model2 <- lme(MMSE_norm~PTEDUCAT*VISCODE+AGE+PTGENDER + AGE*PTGENDER, random = ~1|RID, data=long_dat)
summary(model1)
summary(model2)
model3 <- lme(MMSE_norm~res*VISCODE+AGE+PTGENDER + AGE*PTGENDER, random = ~1|RID, data=long_dat)
summary(model3)
model4 <- lme(MMSE_norm~thirtile_PGS*VISCODE+AGE+PTGENDER + AGE*PTGENDER, random = ~1|RID, data=long_dat)
model5 <- lme(MMSE_norm~thirtile_years*VISCODE+AGE+PTGENDER + AGE*PTGENDER, random = ~1|RID, data=long_dat)
model6 <- lme(MMSE_norm~thirtile_res*VISCODE+AGE+PTGENDER + AGE*PTGENDER, random = ~1|RID, data=long_dat)
summary(model4)
long_dat$thirtile_PGS <- as.character(long_dat$thirtile_PGS)
long_dat$thirtile_res <- as.character(long_dat$thirtile_res)
long_dat$thirtile_years <- as.character(long_dat$thirtile_years)
model4 <- lme(MMSE_norm~thirtile_PGS*VISCODE+AGE+PTGENDER + AGE*PTGENDER, random = ~1|RID, data=long_dat)
model4 <- lme(MMSE_norm~thirtile_PGS*VISCODE+AGE+PTGENDER + AGE*PTGENDER, random = ~1|RID, data=long_dat)
model5 <- lme(MMSE_norm~thirtile_years*VISCODE+AGE+PTGENDER + AGE*PTGENDER, random = ~1|RID, data=long_dat)
model4 <- lme(MMSE_norm~thirtile_PGS*VISCODE+AGE+PTGENDER + AGE*PTGENDER, random = ~1|RID, data=long_dat)
model5 <- lme(MMSE_norm~thirtile_years*VISCODE+AGE+PTGENDER + AGE*PTGENDER, random = ~1|RID, data=long_dat)
model6 <- lme(MMSE_norm~thirtile_res*VISCODE+AGE+PTGENDER + AGE*PTGENDER, random = ~1|RID, data=long_dat)
summary(model4)
summary(model5)
summary(model6)
par(mfrow=c(1,3)) # Set parameters for plots
################################################################################
# MMSE~ by Genetic Capacity by Residual EA (Underachiever)
################################################################################
# Fit the Kaplan-Meier estimator
surv_fit <- long_dat %>%
filter(as.integer(VISCODE) <= 9, AGE>=60, AGE<=75, thirtile_res==1) %>%
survfit(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_PGS, data = .)
# Create the Kaplan-Meier survival plot
plot(surv_fit,
main = "Kaplan-Meier Survival Curve (Underachiever)",
xlab = "Time",
ylab = "Survival Probability",
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2,
xlim = c(0, 10),
cex.main = 0.95)
legend("bottomleft",
legend = c("Low PGS", "Middle PGS", "High PGS"),
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2)
axis(1, lwd = 1)  # Change x-axis thickness
axis(2, lwd = 1)  # Change y-axis thickness
# Log Rank Test
logrank_test$MMSE_PGS_low <- long_dat %>%
filter(as.integer(VISCODE) <= 9,
thirtile_PGS != 2,
thirtile_res==1) %>% # Low PGS
survdiff(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_PGS, data = .)
################################################################################
# MMSE~ by Genetic Capacity by Residual EA (Average Performance)
################################################################################
# Fit the Kaplan-Meier estimator
surv_fit <- long_dat %>%
filter(as.integer(VISCODE) <= 9, AGE>=60, AGE<=75, thirtile_res==2) %>%
survfit(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_PGS, data = .)
# Create the Kaplan-Meier survival plot
plot(surv_fit,
main = "Kaplan-Meier Survival Curve (Average Performance)",
xlab = "Time",
ylab = "Survival Probability",
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2,
xlim = c(0, 10),
cex.main = 0.95)
legend("bottomleft",
legend = c("Low PGS", "Middle PGS", "High PGS"),
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2)
axis(1, lwd = 1)  # Change x-axis thickness
axis(2, lwd = 1)  # Change y-axis thickness
# Log Rank Test
logrank_test$MMSE_PGS_mid <- long_dat %>%
filter(as.integer(VISCODE) <= 9,
thirtile_PGS != 2,
thirtile_res==2) %>% # Middle PGS
survdiff(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_PGS, data = .)
################################################################################
# MMSE~ by Genetic Capacity by Residual EA (Overachiever)
################################################################################
# Fit the Kaplan-Meier estimator
surv_fit <- long_dat %>%
filter(as.integer(VISCODE) <= 9, AGE>=60, AGE<=75, thirtile_res==3) %>%
survfit(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_PGS, data = .)
# Create the Kaplan-Meier survival plot
plot(surv_fit,
main = "Kaplan-Meier Survival Curve (Overachiever)",
xlab = "Time",
ylab = "Survival Probability",
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2,
xlim = c(0, 10),
cex.main = 0.95)
legend("bottomleft",
legend = c("Low PGS", "Middle PGS", "High PGS"),
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2)
axis(1, lwd = 1)  # Change x-axis thickness
axis(2, lwd = 1)  # Change y-axis thickness
# Log Rank Test
logrank_test$MMSE_PGS_high <- long_dat %>%
filter(as.integer(VISCODE) <= 9,
thirtile_PGS != 2,
thirtile_res==3) %>% # High PGS
survdiff(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_PGS, data = .)
logrank_test$MMSE_PGS_mid
logrank_test$MMSE_PGS_mid <- long_dat %>%
filter(as.integer(VISCODE) <= 9,
thirtile_PGS != 1,
thirtile_res==2) %>% # Middle PGS
survdiff(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_PGS, data = .)
logrank_test$MMSE_PGS_mid
par(mfrow=c(1,3)) # Set parameters for plots
################################################################################
# MMSE~ by Genetic Capacity by Residual EA (Underachiever)
################################################################################
# Fit the Kaplan-Meier estimator
surv_fit <- long_dat %>%
filter(as.integer(VISCODE) <= 9, AGE>=60, AGE<=75, thirtile_res==1) %>%
survfit(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_PGS, data = .)
# Create the Kaplan-Meier survival plot
plot(surv_fit,
main = "Kaplan-Meier Survival Curve (Underachiever)",
xlab = "Time",
ylab = "Survival Probability",
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2,
xlim = c(0, 10),
cex.main = 0.95)
legend("bottomleft",
legend = c("Low PGS", "Middle PGS", "High PGS"),
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2)
axis(1, lwd = 1)  # Change x-axis thickness
axis(2, lwd = 1)  # Change y-axis thickness
# Log Rank Test
logrank_test$MMSE_PGS_low <- long_dat %>%
filter(as.integer(VISCODE) <= 9,
thirtile_PGS != 2,
thirtile_res==1) %>% # Low PGS
survdiff(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_PGS, data = .)
################################################################################
# MMSE~ by Genetic Capacity by Residual EA (Average Performance)
################################################################################
# Fit the Kaplan-Meier estimator
surv_fit <- long_dat %>%
filter(as.integer(VISCODE) <= 9, AGE>=60, AGE<=75, thirtile_res==2) %>%
survfit(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_PGS, data = .)
# Create the Kaplan-Meier survival plot
plot(surv_fit,
main = "Kaplan-Meier Survival Curve (Average Performance)",
xlab = "Time",
ylab = "Survival Probability",
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2,
xlim = c(0, 10),
cex.main = 0.95)
legend("bottomleft",
legend = c("Low PGS", "Middle PGS", "High PGS"),
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2)
axis(1, lwd = 1)  # Change x-axis thickness
axis(2, lwd = 1)  # Change y-axis thickness
# Log Rank Test
logrank_test$MMSE_PGS_mid <- long_dat %>%
filter(as.integer(VISCODE) <= 9,
thirtile_PGS != 2,
thirtile_res==2) %>% # Middle PGS
survdiff(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_PGS, data = .)
################################################################################
# MMSE~ by Genetic Capacity by Residual EA (Overachiever)
################################################################################
# Fit the Kaplan-Meier estimator
surv_fit <- long_dat %>%
filter(as.integer(VISCODE) <= 9, AGE>=60, AGE<=75, thirtile_res==3) %>%
survfit(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_PGS, data = .)
# Create the Kaplan-Meier survival plot
plot(surv_fit,
main = "Kaplan-Meier Survival Curve (Overachiever)",
xlab = "Time",
ylab = "Survival Probability",
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2,
xlim = c(0, 10),
cex.main = 0.95)
legend("bottomleft",
legend = c("Low PGS", "Middle PGS", "High PGS"),
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2)
axis(1, lwd = 1)  # Change x-axis thickness
axis(2, lwd = 1)  # Change y-axis thickness
# Log Rank Test
logrank_test$MMSE_PGS_high <- long_dat %>%
filter(as.integer(VISCODE) <= 9,
thirtile_PGS != 2,
thirtile_res==3) %>% # High PGS
survdiff(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_PGS, data = .)
logrank_test$MMSE_res_high
logrank_test$MMSE_res_mid
logrank_test$MMSE_res_low
check_model(model)
logrank_test$MMSE_years <- long_dat %>%
filter(as.integer(VISCODE) <= 9, thirtile_years != 1, AGE>=60, AGE<=75) %>%
survdiff(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_years, data = .)
logrank_test$MMSE_years
par(mfrow=c(1,3)) # Set parameters for plots
################################################################################
# MMSE~Residual EA by Genetic Capacity (Low)
################################################################################
# Fit the Kaplan-Meier estimator
surv_fit <- long_dat %>%
filter(as.integer(VISCODE) <= 9, AGE>=60, AGE<=75, thirtile_PGS==1) %>%
survfit(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_years, data = .)
# Create the Kaplan-Meier survival plot
plot(surv_fit,
main = "Kaplan-Meier Survival Curve (Low PGS)",
xlab = "Time",
ylab = "Survival Probability",
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2,
xlim = c(0, 10),
cex.main = 0.95)
legend("bottomleft",
legend = c("Underachiever", "Average", "Overachiever"),
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2)
axis(1, lwd = 1)  # Change x-axis thickness
axis(2, lwd = 1)  # Change y-axis thickness
# Log Rank Test
logrank_test$MMSE_res_low <- long_dat %>%
filter(as.integer(VISCODE) <= 9,
thirtile_res != 2,
thirtile_PGS==1) %>% # Low PGS
survdiff(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_res, data = .)
################################################################################
# MMSE~Residual EA by Genetic Capacity (Middle)
################################################################################
# Fit the Kaplan-Meier estimator
surv_fit <- long_dat %>%
filter(as.integer(VISCODE) <= 9, AGE>=60, AGE<=75, thirtile_PGS==2) %>%
survfit(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_years, data = .)
# Create the Kaplan-Meier survival plot
plot(surv_fit,
main = "Kaplan-Meier Survival Curve (Middle PGS)",
xlab = "Time",
ylab = "Survival Probability",
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2,
xlim = c(0, 10),
cex.main = 0.95)
legend("bottomleft",
legend = c("Underachiever", "Average", "Overachiever"),
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2)
axis(1, lwd = 1)  # Change x-axis thickness
axis(2, lwd = 1)  # Change y-axis thickness
# Log Rank Test
logrank_test$MMSE_res_mid <- long_dat %>%
filter(as.integer(VISCODE) <= 9,
thirtile_res != 1,
thirtile_PGS==2) %>% # Middle PGS
survdiff(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_res, data = .)
################################################################################
# MMSE~Residual EA by Genetic Capacity (High)
################################################################################
# Fit the Kaplan-Meier estimator
surv_fit <- long_dat %>%
filter(as.integer(VISCODE) <= 9, AGE>=60, AGE<=75, thirtile_PGS==3) %>%
survfit(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_years, data = .)
# Create the Kaplan-Meier survival plot
plot(surv_fit,
main = "Kaplan-Meier Survival Curve (High PGS)",
xlab = "Time",
ylab = "Survival Probability",
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2,
xlim = c(0, 10),
cex.main = 0.95)
legend("bottomleft",
legend = c("Underachiever", "Average", "Overachiever"),
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2)
axis(1, lwd = 1)  # Change x-axis thickness
axis(2, lwd = 1)  # Change y-axis thickness
# Log Rank Test
logrank_test$MMSE_res_high <- long_dat %>%
filter(as.integer(VISCODE) <= 9,
thirtile_res != 2,
thirtile_PGS==3) %>% # High PGS
survdiff(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_res, data = .)
par(mfrow=c(1,3)) # Set parameters for plots
################################################################################
# MMSE~ by Genetic Capacity by Residual EA (Underachiever)
################################################################################
# Fit the Kaplan-Meier estimator
surv_fit <- long_dat %>%
filter(as.integer(VISCODE) <= 9, AGE>=60, AGE<=75, thirtile_years==1) %>%
survfit(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_PGS, data = .)
# Create the Kaplan-Meier survival plot
plot(surv_fit,
main = "Kaplan-Meier Survival Curve (Underachiever)",
xlab = "Time",
ylab = "Survival Probability",
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2,
xlim = c(0, 10),
cex.main = 0.95)
legend("bottomleft",
legend = c("Low PGS", "Middle PGS", "High PGS"),
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2)
axis(1, lwd = 1)  # Change x-axis thickness
axis(2, lwd = 1)  # Change y-axis thickness
# Log Rank Test
logrank_test$MMSE_PGS_low <- long_dat %>%
filter(as.integer(VISCODE) <= 9,
thirtile_PGS != 2,
thirtile_res==1) %>% # Low PGS
survdiff(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_PGS, data = .)
################################################################################
# MMSE~ by Genetic Capacity by Residual EA (Average Performance)
################################################################################
# Fit the Kaplan-Meier estimator
surv_fit <- long_dat %>%
filter(as.integer(VISCODE) <= 9, AGE>=60, AGE<=75, thirtile_years==2) %>%
survfit(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_PGS, data = .)
# Create the Kaplan-Meier survival plot
plot(surv_fit,
main = "Kaplan-Meier Survival Curve (Average Performance)",
xlab = "Time",
ylab = "Survival Probability",
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2,
xlim = c(0, 10),
cex.main = 0.95)
legend("bottomleft",
legend = c("Low PGS", "Middle PGS", "High PGS"),
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2)
axis(1, lwd = 1)  # Change x-axis thickness
axis(2, lwd = 1)  # Change y-axis thickness
# Log Rank Test
logrank_test$MMSE_PGS_mid <- long_dat %>%
filter(as.integer(VISCODE) <= 9,
thirtile_PGS != 2,
thirtile_res==2) %>% # Middle PGS
survdiff(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_PGS, data = .)
################################################################################
# MMSE~ by Genetic Capacity by Residual EA (Overachiever)
################################################################################
# Fit the Kaplan-Meier estimator
surv_fit <- long_dat %>%
filter(as.integer(VISCODE) <= 9, AGE>=60, AGE<=75, thirtile_years==3) %>%
survfit(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_PGS, data = .)
# Create the Kaplan-Meier survival plot
plot(surv_fit,
main = "Kaplan-Meier Survival Curve (Overachiever)",
xlab = "Time",
ylab = "Survival Probability",
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2,
xlim = c(0, 10),
cex.main = 0.95)
legend("bottomleft",
legend = c("Low PGS", "Middle PGS", "High PGS"),
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2)
axis(1, lwd = 1)  # Change x-axis thickness
axis(2, lwd = 1)  # Change y-axis thickness
# Log Rank Test
logrank_test$MMSE_PGS_high <- long_dat %>%
filter(as.integer(VISCODE) <= 9,
thirtile_PGS != 2,
thirtile_res==3) %>% # High PGS
survdiff(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_PGS, data = .)
################################################################################
# MMSE~Genetic Capacity
################################################################################
# Fit the Kaplan-Meier estimator (MMSE~PGS)
surv_fit <- long_dat %>%
filter(as.integer(VISCODE) <= 9, AGE>=60, AGE<=75) %>%
survfit(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_years, data = .)
# Create the Kaplan-Meier survival plot (MMSE~PGS)
par(mfrow=c(1,3))
plot(surv_fit,
main = "Kaplan-Meier Survival Curve (MMSE~years)",
xlab = "Time",
ylab = "Survival Probability",
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2,
xlim = c(0, 10),
cex.main = 0.95)
legend("bottomleft",
legend = c("Low capacity", "Average", "High capacity"),
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2)
axis(1, lwd = 1)  # Change x-axis thickness
axis(2, lwd = 1)  # Change y-axis thickness
# Log Rank Test (MMSE~PGS)
logrank_test$MMSE_years <- long_dat %>%
filter(as.integer(VISCODE) <= 9, thirtile_years != 2, AGE>=60, AGE<=75) %>%
survdiff(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_years, data = .)
################################################################################
# MMSE~Genetic Capacity
################################################################################
# Fit the Kaplan-Meier estimator (MMSE~PGS)
surv_fit <- long_dat %>%
filter(as.integer(VISCODE) <= 9, AGE>=60, AGE<=75) %>%
survfit(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_PGS, data = .)
plot(surv_fit,
main = "Kaplan-Meier Survival Curve (MMSE~PGS)",
xlab = "Time",
ylab = "Survival Probability",
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2,
xlim = c(0, 10),
cex.main = 0.95)
legend("bottomleft",
legend = c("Low capacity", "Average", "High capacity"),
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2)
axis(1, lwd = 1)  # Change x-axis thickness
axis(2, lwd = 1)  # Change y-axis thickness
# Log Rank Test (MMSE~PGS)
logrank_test$MMSE_PGS <- long_dat %>%
filter(as.integer(VISCODE) <= 9, thirtile_PGS != 2, AGE>=60, AGE<=75) %>%
survdiff(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_PGS, data = .)
################################################################################
# MMSE~Residual EA
################################################################################
# Fit the Kaplan-Meier estimator (MMSE~res)
surv_fit <- long_dat %>%
filter(as.integer(VISCODE) <= 9, AGE>=60, AGE<=75) %>%
survfit(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_res, data = .)
# Create the Kaplan-Meier survival plot (MMSE~res)
plot(surv_fit,
main = "Kaplan-Meier Survival Curve (MMSE~res)",
xlab = "Time",
ylab = "Survival Probability",
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2,
xlim = c(0, 10),
cex.main = 0.95)  # Adjust the size of the title
legend("bottomleft",
legend = c("Underperformed", "Average", "Overperformed"),
col = c("#021636", "#bbceed", "#0a77f5"),
lwd = 2)
axis(1, lwd = 1)  # Change x-axis thickness
axis(2, lwd = 1)  # Change y-axis thickness
# Log Rank Test (MMSE~res)
logrank_test$MMSE_res <- long_dat %>%
filter(as.integer(VISCODE) <= 9, thirtile_res != 2, AGE>=60, AGE<=75) %>%
survdiff(Surv(as.integer(VISCODE), MMSE_cut) ~ thirtile_res, data = .)
