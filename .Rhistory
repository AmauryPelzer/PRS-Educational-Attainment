rm(df)
View(test)
View(x)
rm(x)
rm(col, row)
View(test)
View(test)
View(test)
pretest <- test
rm(test)
post <- data.frame('Negative' = c(30, 26, 22), 'Positive' = c(1, 4, 4), row.names = c('Control', 'None-PTSD', 'PTSD'))
View(post)
colnames(post) <- c('Negative', 'Positive')
mosaplot_pre <- mosaicplot(post, main = 'Post-Stress Autoantibody Prevalence in Immunohistochemistry per Group', color = TRUE)
> mosaplot_post <- mosaicplot(post, main = 'Post-Stress Autoantibody Prevalence in Immunohistochemistry per Group', color = TRUE)
mosaplot_post <- mosaicplot(post, main = 'Post-Stress Autoantibody Prevalence in Immunohistochemistry per Group', color = TRUE)
mosaplot_pre <- mosaicplot(pre, main = 'Pre-Stress Autoantibody Prevalence in Immunohistochemistry per Group', color = TRUE)
mosaplot_pre
jpeg(file = 'plot_pre.jpeg')
show(mosaplot_post)
rm(mosaplot_post)
rm(mosaplot_pre)
mosaicplot(post, main = 'Post-Stress Autoantibody Prevalence in Immunohistochemistry per Group')
mosaicplot(post, main = 'Post-Stress Autoantibody Prevalence in Immunohistochemistry per Group')
mosaicplot(post, main = 'Post-Stress Autoantibody Prevalence in Immunohistochemistry per Group', color = TRUE)
mosaicplot(pre, main = 'Pre-Stress Autoantibody Prevalence in Immunohistochemistry per Group', color = TRUE)
chisq.test(post)
chisq.test(post)$expected
fisher.test(post)
View(pretest)
posttest <- fisher.test(post)
View(posttest)
View(posttest)
View(pretest)
View(posttest)
View(pretest)
View(posttest)
install.packages("rafalib")
install.packages("swirl")
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div()
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
my_vector <- c(1:20)
info()
back()
nxt()
?:
?operator
??operator
my_vector
(1:20)
my_vector <- (1:20)
my_vector <- (1::20)
my_vector <- (1:20)
my_vector <- c(1:20)
my_vector <- (1:20)
nxt()
my_vector <- (1:20)
my_vector
info()
skip()
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c(Bill, Gina, Kelly, Sean)
patients <- c('Bill', 'Gina', 'Kelly', 'Sean')
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c('patient', 'age', 'weight', 'bp', 'rating', 'test')
?colnames
colnames(my,data.frame) <- cnames
colnames(my_data.frame) <- cnames
colnames(my_data) <- cnames
my_data
info()
bye()
swirl()
library(swirl)
swirl()
TRUE == TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
bye()
swirl
swirl()
exit
menue()
info()
main()
main()
bye()
v <- c(2.23, 3.45, 1.87, 2.11, 7.33, 18.34, 19.23)
average(v)
?average
mean(v)
for i in 25
print(i)
print(i)
x = 1:25
for (i in x)
clear()
for (i in 1:25){
i + sqrt(i)
}
print(x)
x <- sqrt(i)
print(z)
print(x)
for(i in 1:25){
x <- i^2
print(x)
}
for(i in 1:25){
x <- i^2
print(x)
}
25^2
for(i in 1:25){
x <- x+i^2
print(x)
}
x<-0
for(i in 1:25){
x+i^2
print(x)
}
for(i in 1:25){
x+i^2
print(x)
}
for(i in 1:25){
x<-x+i^2
}
print(x)
cars
class(cars)
nrow(cars)
colnames(cars(2))
?colnames
colnames(cars,2)
mean(cars[,2])
?which
which(cars == 85)
cars[which(cars == 85)]
cars[which(85)]
cars[which(cars==85)]
cars[which(cars$2==85)]
cars[which(cars$dist==85)]
cars[which(cars$dist==85)]
which(cars$dist==85)
install.packages("readxl")
library("readxl")
read_excel(sebastianmarten/Desktop/NeuroExperiment.xlsx)
read_excel(NeuroExperiment.xlsx)
read_excel(Desktop/NeuroExperiment.xlsx)
read_excel("Desktop/NeuroExperiment.xlsx")
x -> read_excel("Desktop/NeuroExperiment.xlsx")
data.frame() -> x
x -> read_excel("Desktop/NeuroExperiment.xlsx")
x = read_excel("NeuroExperiemtn.xlsx")
x = read_excel("NeuroExperiment.xlsx")
x = read_excel("Desktop/NeuroExperiment.xlsx")
View(x)
update.packages()
library(tidyverse)
dat <- read.csv("ADNIMERGE.csv")
library(tidyverse)
dat <- read.csv("ADNIMERGE.csv")
setwd("/Users/sebastianmarten/Documents/GitHub/PRS-Educational-Attainment")
dat <- read.csv("ADNIMERGE.csv")
View(dat)
x <- dat[,c(1,3,8,9:16)]
View(x)
x <- dat[,c(1,3,8,9:15)]
View(x)
y <- dat %>% pivot_wider(names_from = VISCODE, values_from = APOE4)
View(y)
y <- x %>% pivot_wider(names_from = VISCODE, values_from = APOE4)
View(y)
x <- dat[,c(1,3,8,9:15,19)]
View(x)
x <- dat[,c(1,3,15,19)]
View(x)
y <- x %>% pivot_wider(names_from = VISCODE, values_from = APOE4)
View(y)
y <- x %>% pivot_wider(names_from = VISCODE, values_from = APOE4,ABETA)
View(dat)
View(x)
y <- x %>% pivot_wider(names_from = VISCODE, id_cols = RID, values_from = APOE4,ABETA)
View(y)
y <- x %>% pivot_wider(names_from = VISCODE, id_cols = RID, values_from = c(APOE4,ABETA))
View(y)
x <- dat[,c(1,3,8:11,15,19)]
View(x)
y <- x %>% pivot_wider(names_from = VISCODE, id_cols = RID, values_from = c(APOE4,ABETA))
y <- x %>% pivot_wider(names_from = VISCODE, id_cols = c(RID, AGE, DX_bl, PTGENDER, PTEDUCAT), values_from = c(APOE4,ABETA))
View(y)
x <- dat[,c(1:3,8:11,15,19)]
y <- x %>% pivot_wider(names_from = VISCODE, id_cols = c(RID, PTID,AGE, DX_bl, PTGENDER, PTEDUCAT), values_from = c(APOE4,ABETA))
colnames(dat)
# How many participants do we have?
length(unique(dat$RID))
length(dat)
dat$AGE
grep("RID", colnames(dat))
dat <- dat %>% arrange(RID, VISCODE)
View(dat)
str(dat$VISCODE)
View(str(dat$VISCODE))
str(dat$VISCODE)
df[order(as.Date(dat$VISCODE))]
df[order(as.Date(dat$VISCODE, format="%m"))]
df[order(as.Date(dat$VISCODE, format="m%m"))]
str(dat)
dat[1,3]
# Change VISCODE Variable into Univariate Categorical
for (n in nrow(dat)){
if (dat[n,3] == bl){
dat[n, 3] <- 0
}
else{
unlist(strsplit(dat[n,3], split = "m", fixed=TRUE))
}
}
# Change VISCODE Variable into Univariate Categorical
for (n in nrow(dat)){
if (dat[n,3] == "bl"){
dat[n, 3] <- 0
}
else{
unlist(strsplit(dat[n,3], split = "m", fixed=TRUE))
}
}
# Change VISCODE Variable into Univariate Categorical
for (n in nrow(dat)){
if (dat[n,"VISCODE"] == "bl"){
dat[n, "VISCODE"] <- 0
}
else{
splitted <- unlist(strsplit(dat[n,"VISCODE"], split = "m", fixed=TRUE))
dat[n, "VISCODE"]
}
}
View(dat)
# Change VISCODE Variable into Univariate Categorical
for (n in nrow(dat)){
if (dat[n,"VISCODE"] == "bl"){
dat[n, "VISCODE"] <- as.numeric(0)
}
else{
splitted <- unlist(strsplit(dat[n,"VISCODE"], split = "m", fixed=TRUE))
dat[n, "VISCODE"] <- as.numeric(splitted[length(splitted)])
}
}
library(tidyverse)
dat <- read.csv("ADNIMERGE.csv")
# How many participants do we have?
length(unique(dat$RID))
#Index Column based on label
grep("RID", colnames(dat))
# Change VISCODE Variable into Univariate Categorical
for (n in nrow(dat)){
if (dat[n,"VISCODE"] == "bl"){
dat[n, "VISCODE"] <- as.numeric(0)
}
else{
splitted <- unlist(strsplit(dat[n,"VISCODE"], split = "m", fixed=TRUE))
dat[n, "VISCODE"] <- as.numeric(splitted[length(splitted)])
}
}
View(dat)
View(dat)
# Change VISCODE Variable into Univariate Categorical
for (n in nrow(dat)){
if (dat[n,"VISCODE"] == "bl"){
dat[n, "VISCODE"] <- as.numeric(0)
}
else{
splitted <- unlist(strsplit(dat[n,"VISCODE"], split = "m", fixed=TRUE))
dat[n, "VISCODE"] <- as.numeric(splitted[length(splitted)])
}
}
View(dat)
str(dat$VISCODE)
unique(str(dat$VISCODE))
unique(dat$VISCODE)
dat$VISCODE == 0
length(dat$VISCODE==0)
length(boolean(dat$VISCODE==0))
length((dat$VISCODE==0)==TRUE)
# Change VISCODE Variable into Univariate Categorical
for (n in nrow(dat)){
if (dat[n,"VISCODE"] == "bl"){
dat[n, "VISCODE"] <- as.numeric(0)
}
else{
splitted <- unlist(strsplit(dat[n,"VISCODE"], split = "m", fixed=TRUE))
dat[n, "VISCODE"] <- as.numeric(splitted[length(splitted)])
}
}
# Change VISCODE Variable into Univariate Categorical
for (n in nrow(dat)){
if (dat[n,"VISCODE"] == "bl"){
dat[n, "VISCODE"] <- as.numeric(0)
}
else{
splitted <- unlist(strsplit(dat[n,"VISCODE"], split = "m", fixed=TRUE))
dat[n, "VISCODE"] <- as.numeric(splitted[length(splitted)])
}
}
dat <- read.csv("ADNIMERGE.csv")
library(tidyverse)
dat <- read.csv("ADNIMERGE.csv")
# How many participants do we have?
length(unique(dat$RID))
#Index Column based on label
grep("RID", colnames(dat))
# Change VISCODE Variable into Univariate Categorical
for (n in nrow(dat)){
if (dat[n,"VISCODE"] == "bl"){
dat[n, "VISCODE"] <- as.numeric(0)
}
if (dat[n,"VISCODE"] == "0"){
dat[n, "VISCODE"] <- as.numeric(0)
}
else{
splitted <- unlist(strsplit(dat[n,"VISCODE"], split = "m", fixed=TRUE))
dat[n, "VISCODE"] <- as.numeric(splitted[length(splitted)])
}
}
View(dat)
dat$VISCODE <- ifelse(dat$VISCODE == "bl", 0,
ifelse(dat$VISCODE == "0", 0,
as.numeric(gsub("[^0-9]", "", dat$VISCODE))))
View(dat)
unique(dat$VISCODE)
dat %>% arrange(RID, VISCODE)
View(dat)
str(dat)
colnames(dat)
dat <- read.csv("ADNIMERGE.csv")
View(dat)
# How many participants do we have?
length(unique(dat$RID))
#Index Column based on label
grep("RID", colnames(dat))
long_dat <- dat[,c(col_fix, col_var)] %>% arrange(RID, EXAMDATE)
# Time dependent measurements
col_fix <- c( "RID","PTID","VISCODE","SITE",
"DX_bl","AGE","PTGENDER","PTEDUCAT","PTETHCAT","PTRACCAT",
"PTMARRY","APOE4","FDG", "DX")
# Time independent measurements
col_var <- c("EXAMDATE", "PIB","AV45","ABETA","TAU", "PTAU","CDRSB","ADAS11",
"ADAS13", "ADASQ4","MMSE","RAVLT_immediate","RAVLT_learning",
"RAVLT_forgetting","RAVLT_perc_forgetting","LDELTOTAL","DIGITSCOR",
"TRABSCOR","FAQ","MOCA")
long_dat <- dat[,c(col_fix, col_var)] %>% arrange(RID, EXAMDATE)
View(long_dat)
View(long_dat)
# From Long to Wide data format
wide_dat <- long_dat %>% pivot_wider(names_from = VISCODE, id_cols = col_fix,
values_from = col_var)
# From Long to Wide data format
wide_dat <- long_dat %>% pivot_wider(names_from = VISCODE, id_cols = all_of(col_fix),
values_from = all_of(col_var))
# From Long to Wide data format
wide_dat <- long_dat %>% pivot_wider(names_from = VISCODE, id_cols = "RID","PTID","VISCODE","SITE",
"PTMARRY","APOE4","FDG", "DX",
"ADAS13", "ADASQ4","MMSE","RAVLT_immediate","RAVLT_learning",
"TRABSCOR","FAQ","MOCA"
# From Long to Wide data format
wide_dat <- long_dat %>% pivot_wider(names_from = VISCODE, id_cols = c("RID","PTID","VISCODE","SITE",
# From Long to Wide data format
wide_dat <- long_dat %>% pivot_wider(names_from = VISCODE, id_cols = c("RID","PTID","VISCODE","SITE",
"DX_bl","AGE","PTGENDER","PTEDUCAT","PTETHCAT","PTRACCAT",
"PTMARRY","APOE4","FDG", "DX"), values_from = c("EXAMDATE", "PIB","AV45","ABETA","TAU", "PTAU","CDRSB","ADAS11",
"ADAS13", "ADASQ4","MMSE","RAVLT_immediate","RAVLT_learning",
"RAVLT_forgetting","RAVLT_perc_forgetting","LDELTOTAL","DIGITSCOR",
"TRABSCOR","FAQ","MOCA"))
# From Long to Wide data format
wide_dat <- long_dat %>% pivot_wider(names_from = VISCODE, id_cols = c("RID","PTID","SITE",
"DX_bl","AGE","PTGENDER","PTEDUCAT","PTETHCAT","PTRACCAT",
"PTMARRY","APOE4","FDG", "DX"), values_from = c("EXAMDATE", "PIB","AV45","ABETA","TAU", "PTAU","CDRSB","ADAS11",
"ADAS13", "ADASQ4","MMSE","RAVLT_immediate","RAVLT_learning",
"RAVLT_forgetting","RAVLT_perc_forgetting","LDELTOTAL","DIGITSCOR",
"TRABSCOR","FAQ","MOCA"))
View(wide_dat)
# From Long to Wide data format
wide_dat <- long_dat %>% pivot_wider(names_from = VISCODE, id_cols = c("RID","PTID","SITE",
"DX_bl","AGE","PTGENDER","PTEDUCAT","PTETHCAT","PTRACCAT",
"PTMARRY","APOE4","FDG"), values_from = c("EXAMDATE", "PIB","AV45","ABETA","TAU", "PTAU","CDRSB","ADAS11",
"ADAS13", "ADASQ4","MMSE","RAVLT_immediate","RAVLT_learning",
"RAVLT_forgetting","RAVLT_perc_forgetting","LDELTOTAL","DIGITSCOR",
"TRABSCOR","FAQ","MOCA", "DX"))
# From Long to Wide data format
wide_dat <- long_dat %>% pivot_wider(names_from = VISCODE, id_cols = c("RID","PTID","SITE",
"DX_bl","AGE","PTGENDER","PTEDUCAT","PTETHCAT","PTRACCAT",
"PTMARRY","APOE4","FDG"), values_from = c("EXAMDATE", "PIB","AV45","ABETA","TAU", "PTAU","CDRSB","ADAS11",
"ADAS13", "ADASQ4","MMSE","RAVLT_immediate","RAVLT_learning",
"RAVLT_forgetting","RAVLT_perc_forgetting","LDELTOTAL","DIGITSCOR",
"TRABSCOR","FAQ","MOCA", "DX"), names_repair = unique)
rlang::last_trace()
View(wide_dat)
# From Long to Wide data format
wide_dat <- long_dat %>% pivot_wider(names_from = VISCODE, id_cols = c("RID","PTID",
"DX_bl","AGE","PTGENDER","PTEDUCAT","PTETHCAT","PTRACCAT",
"PTMARRY","APOE4"), values_from = c("EXAMDATE", "PIB","AV45","ABETA","TAU", "PTAU","CDRSB","ADAS11",
"ADAS13", "ADASQ4","MMSE","RAVLT_immediate","RAVLT_learning",
"RAVLT_forgetting","RAVLT_perc_forgetting","LDELTOTAL","DIGITSCOR",
"TRABSCOR","FAQ","MOCA", "DX", "SITE", "FDG"), names_repair = unique)
View(wide_dat)
# From Long to Wide data format
wide_dat <- long_dat %>% pivot_wider(names_from = VISCODE, id_cols = c("RID","PTID",
"DX_bl","AGE","PTGENDER","PTEDUCAT","PTETHCAT","PTRACCAT",
"APOE4"), values_from = c("EXAMDATE", "PIB","AV45","ABETA","TAU", "PTAU","CDRSB","ADAS11",
"ADAS13", "ADASQ4","MMSE","RAVLT_immediate","RAVLT_learning",
"RAVLT_forgetting","RAVLT_perc_forgetting","LDELTOTAL","DIGITSCOR",
"TRABSCOR","FAQ","MOCA", "DX", "SITE", "FDG", "PTMARRY"), names_repair = unique)
# Time dependent measurements
col_fix <- c( "RID","PTID","VISCODE",
"DX_bl","AGE","PTGENDER","PTEDUCAT","PTETHCAT","PTRACCAT")
# Time independent measurements
col_var <- c("EXAMDATE", "PIB","AV45","ABETA","TAU", "PTAU","CDRSB","ADAS11",
"ADAS13", "ADASQ4","MMSE","RAVLT_immediate","RAVLT_learning",
"RAVLT_forgetting","RAVLT_perc_forgetting","LDELTOTAL","DIGITSCOR",
"TRABSCOR","FAQ","MOCA", "PTMARRY", "APOE4", "FDG", "DX")
long_dat <- dat[,c(col_fix, col_var)] %>% arrange(RID, EXAMDATE)
View(long_dat)
# From Long to Wide data format
wide_dat <- long_dat %>% pivot_wider(
names_from = VISCODE,
id_cols = col_fix,
values_from = col_var,
names_repair = unique
)
View(wide_dat)
# Time dependent measurements
col_fix <- c( "RID","PTID","VISCODE", "PTETHCAT","PTRACCAT")
# Time independent measurements
col_var <- c("DX_bl","AGE","PTGENDER","PTEDUCAT","EXAMDATE", "PIB","AV45","ABETA","TAU", "PTAU","CDRSB","ADAS11",
"ADAS13", "ADASQ4","MMSE","RAVLT_immediate","RAVLT_learning",
"RAVLT_forgetting","RAVLT_perc_forgetting","LDELTOTAL","DIGITSCOR",
"TRABSCOR","FAQ","MOCA", "PTMARRY", "APOE4", "FDG", "DX")
long_dat <- dat[,c(col_fix, col_var)] %>% arrange(RID, EXAMDATE)
# From Long to Wide data format
wide_dat <- long_dat %>% pivot_wider(
names_from = VISCODE,
id_cols = col_fix,
values_from = col_var,
names_repair = unique
)
View(wide_dat)
# From Long to Wide data format
wide_dat <- long_dat %>% pivot_wider(
names_from = VISCODE,
id_cols = c("RID","PTID","VISCODE", "PTETHCAT","PTRACCAT"),
values_from = c("DX_bl","AGE","PTGENDER","PTEDUCAT","EXAMDATE", "PIB","AV45","ABETA","TAU", "PTAU","CDRSB","ADAS11",
"ADAS13", "ADASQ4","MMSE","RAVLT_immediate","RAVLT_learning",
"RAVLT_forgetting","RAVLT_perc_forgetting","LDELTOTAL","DIGITSCOR",
"TRABSCOR","FAQ","MOCA", "PTMARRY", "APOE4", "FDG", "DX"),
names_repair = unique
)
# From Long to Wide data format
wide_dat <- long_dat %>% pivot_wider(
names_from = VISCODE,
id_cols = c("RID","PTID","PTETHCAT","PTRACCAT"),
values_from = c("DX_bl","AGE","PTGENDER","PTEDUCAT","EXAMDATE", "PIB","AV45","ABETA","TAU", "PTAU","CDRSB","ADAS11",
"ADAS13", "ADASQ4","MMSE","RAVLT_immediate","RAVLT_learning",
"RAVLT_forgetting","RAVLT_perc_forgetting","LDELTOTAL","DIGITSCOR",
"TRABSCOR","FAQ","MOCA", "PTMARRY", "APOE4", "FDG", "DX"),
names_repair = unique
)
View(wide_dat)
unique(dat$VISCODE)
length(unique(dat$VISCODE))
sum(dat$VISCODE=="m156")
sum(dat$VISCODE=="bl")
sum(dat$VISCODE=="120")
# How many participants do we have?
length(unique(dat$RID))
