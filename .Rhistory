time_dependent <- FALSE
unique_participants <- unique(x[, 1])
for (participant in unique_participants) {
participant_data <- x[x[, 1] == participant, 2]
if (length(unique(participant_data)) > 1) {
time_dependent <- TRUE
break
}
}
if (time_dependent) {
return(data.frame(variable = tvar, status = "Time Dependent"))
} else {
return(data.frame(variable = tvar, status = "Time Independent"))
}
}
results <- data.frame(variable = character(), status = character(), stringsAsFactors = FALSE)
for (col in 1:length(colnames(dat))) {
result <- time_test(dat, "RID", colnames(dat)[col])
results <- rbind(results, result)
}
rm(result)
ivars <- subset(results, status=="Time Independent")
nivars <- subset(results, status=="Time Dependent")
View(ivars)
setwd("/Users/sebastianmarten/Documents/GitHub/PRS-Educational-Attainment")
col <- c(nivars$variable, ivars$variable)
# Define Variables of Interest & Order
long_dat <- dat[,col] %>% arrange(RID, EXAMDATE) %>% rename(DX_bas = DX_bl)
View(long_dat)
col <- c(nivars$variable, ivars$variable) %% subset(-c("SITE","COLPROT","ORIGPROT","EXAMDATE","FLDSTRENG","FSVERSION","IMAGEUID", "Month_bl","Month","M","update_stamp"))
col <- c(nivars$variable, ivars$variable) %% subset(-c("SITE","COLPROT","ORIGPROT","EXAMDATE","FLDSTRENG","FSVERSION","IMAGEUID", "Month_bl","Month","M","update_stamp")
col <- c(nivars$variable, ivars$variable) %% subset(-c("SITE","COLPROT","ORIGPROT","EXAMDATE","FLDSTRENG","FSVERSION","IMAGEUID","Month_bl","Month","M","update_stamp")
col <- c(nivars$variable, ivars$variable) %% subset(-c("SITE","COLPROT","ORIGPROT","EXAMDATE","FLDSTRENG","FSVERSION","IMAGEUID","Month_bl","Month","M","update_stamp"))
del <- c("SITE","COLPROT","ORIGPROT","EXAMDATE","FLDSTRENG","FSVERSION","IMAGEUID","Month_bl","Month","M","update_stamp")
col <- c(nivars$variable, ivars$variable) %% subset(-del)
col <- c(nivars$variable, ivars$variable) %% subset(-c(del)
del <- c("SITE","COLPROT","ORIGPROT","EXAMDATE","FLDSTRENG","FSVERSION","IMAGEUID","Month_bl","Month","M","update_stamp")
del <- c("SITE","COLPROT","ORIGPROT","EXAMDATE","FLDSTRENG","FSVERSION","IMAGEUID","Month_bl","Month","M","update_stamp")
col <- c(nivars$variable, ivars$variable) %% subset(select=-del)
col <- c(nivars$variable, ivars$variable) %% subset(select=-c("SITE","COLPROT","ORIGPROT","EXAMDATE","FLDSTRENG","FSVERSION","IMAGEUID","Month_bl","Month","M","update_stamp"))
col <- c(nivars$variable, ivars$variable)
col <- subset(col, select=-c("SITE","COLPROT","ORIGPROT","EXAMDATE","FLDSTRENG",
"FSVERSION","IMAGEUID","Month_bl","Month","M",
"update_stamp"))
rm(del)
col <- c(nivars$variable, ivars$variable)
col <- subset(col, select=-c(SITE,COLPROT,ORIGPROT,EXAMDATE,FLDSTRENG,
FSVERSION,IMAGEUID,Month_bl,Month,M,
update_stamp))
col <- as.dataframe(c(nivars$variable, ivars$variable))
col <- as.data.frame(c(nivars$variable, ivars$variable))
View(col)
?as.data.frame
col <- as.data.frame(c(nivars$variable, ivars$variable), column.names="Variable")
View(col)
col <- cbind(nivars$variable, ivars$variable)
col <- merge(nivars$variable, ivars$variable)
View(col)
col <- merge(nivars,ivars)
View(col)
?merge()
View(nivars)
col <- merge(nivars,ivars, by=variable)
col <- merge(nivars,ivars, by="variable")
View(col)
View(ivars)
# Define Variables of Interest & Order
long_dat <- dat[,col] %>% arrange(RID, EXAMDATE) %>% rename(DX_bas = DX_bl) %>%
subset(col, select=-c(SITE,COLPROT,ORIGPROT,EXAMDATE,FLDSTRENG,FSVERSION,
IMAGEUID,Month_bl,Month,M,update_stamp))
?subset()
# Define Variables of Interest & Order
long_dat <- dat[,col] %>% arrange(RID, EXAMDATE) %>% rename(DX_bas = DX_bl) %>%
subset(col, select = -c(SITE,COLPROT,ORIGPROT,EXAMDATE,FLDSTRENG,FSVERSION,
IMAGEUID,Month_bl,Month,M,update_stamp))
# Define Variables of Interest & Order
long_dat <- dat[,col] %>% arrange(RID, EXAMDATE) %>% rename(DX_bas = DX_bl) %>%
subset(col, select = c(SITE,COLPROT,ORIGPROT,EXAMDATE,FLDSTRENG,FSVERSION,
IMAGEUID,Month_bl,Month,M,update_stamp))
# Define Variables of Interest & Order
long_dat <- dat[,col] %>% arrange(RID, EXAMDATE) %>% rename(DX_bas = DX_bl)
# Define Variables of Interest & Order
long_dat <- dat[,col] %>% arrange(RID, EXAMDATE) %>% rename(DX_bas = DX_bl) %>%
subset(col, select = ,-c(SITE,COLPROT,ORIGPROT,EXAMDATE,FLDSTRENG,FSVERSION,
IMAGEUID,Month_bl,Month,M,update_stamp))
# Define Variables of Interest & Order
long_dat <- dat[,col] %>% arrange(RID, EXAMDATE) %>% rename(DX_bas = DX_bl) %>%
subset(col, select = [,-c(SITE,COLPROT,ORIGPROT,EXAMDATE,FLDSTRENG,FSVERSION,
# Define Variables of Interest & Order
long_dat <- dat[,col] %>% arrange(RID, EXAMDATE) %>% rename(DX_bas = DX_bl) %>%
subset(col, select = long-dat[,-c(SITE,COLPROT,ORIGPROT,EXAMDATE,FLDSTRENG,FSVERSION,
IMAGEUID,Month_bl,Month,M,update_stamp))]
# Define Variables of Interest & Order
long_dat <- dat[,col] %>% arrange(RID, EXAMDATE) %>% rename(DX_bas = DX_bl) %>%
subset(col, select = c(SITE,COLPROT,ORIGPROT,EXAMDATE,FLDSTRENG,FSVERSION,
IMAGEUID,Month_bl,Month,M,update_stamp))
# Define Variables of Interest & Order
long_dat <- dat[,col] %>% arrange(RID, EXAMDATE) %>% rename(DX_bas = DX_bl) %>%
subset(col, select = c(SITE,COLPROT,ORIGPROT,EXAMDATE,FLDSTRENG,FSVERSION,
IMAGEUID,Month_bl,Month,M,update_stamp), drop=TRUE)
,COLPROT,ORIGPROT,EXAMDATE,FLDSTRENG,FSVERSION,
# Define Variables of Interest & Order
long_dat <- dat[,col] %>% arrange(RID, EXAMDATE) %>% rename(DX_bas = DX_bl) %>%
subset(col, select =SITE)
# Define Variables of Interest & Order
long_dat <- dat[,col] %>% arrange(RID, EXAMDATE) %>% rename(DX_bas = DX_bl) %>%
subset(col, select ="SITE")
# Define Variables of Interest & Order
long_dat <- dat[,col] %>% arrange(RID, EXAMDATE) %>% rename(DX_bas = DX_bl) %>%
subset(select ="SITE")
# Define Variables of Interest & Order
long_dat <- dat[,col] %>% arrange(RID, EXAMDATE) %>% rename(DX_bas = DX_bl) %>%
subset(select =SITE)
# Define Variables of Interest & Order
long_dat <- dat[,col] %>% arrange(RID, EXAMDATE) %>% rename(DX_bas = DX_bl) %>%
subset(select = c(SIDE,COLPROT,ORIGPROT,EXAMDATE,FLDSTRENG,FSVERSION,
IMAGEUID,Month_bl,Month,M,update_stamp), drop=TRUE)
# Define Variables of Interest & Order
long_dat <- dat[, col] %>%
arrange(RID, EXAMDATE) %>%
rename(DX_bas = DX_bl) %>%
subset(select = -c(SIDE, COLPROT, ORIGPROT, EXAMDATE, FLDSTRENG, FSVERSION, IMAGEUID, Month_bl, Month, M, update_stamp))
# Define Variables of Interest & Order
long_dat <- dat[, col] %>%
arrange(RID, EXAMDATE) %>%
rename(DX_bas = DX_bl) %>%
select(-c(SIDE, COLPROT, ORIGPROT, EXAMDATE, FLDSTRENG, FSVERSION, IMAGEUID, Month_bl, Month, M, update_stamp))
# Define Variables of Interest & Order
long_dat <- dat[, col] %>%
arrange(RID, EXAMDATE) %>%
rename(DX_bas = DX_bl) %>%
select(-c(SIDE, COLPROT, ORIGPROT, EXAMDATE, FLDSTRENG, FSVERSION, IMAGEUID, Month_bl, Month, M, update_stamp))
View(col)
# Define Variables of Interest & Order
long_dat <- dat[, c(ivars, nivars)] %>%
arrange(RID, EXAMDATE) %>%
rename(DX_bas = DX_bl) %>%
subset(select = -c(SIDE, COLPROT, ORIGPROT, EXAMDATE, FLDSTRENG, FSVERSION, IMAGEUID, Month_bl, Month, M, update_stamp))
ivars[,1]
# Define Variables of Interest & Order
long_dat <- dat[, c(ivars[,1], nivars[,1])] %>%
arrange(RID, EXAMDATE) %>%
rename(DX_bas = DX_bl) %>%
subset(select = -c(SIDE, COLPROT, ORIGPROT, EXAMDATE, FLDSTRENG, FSVERSION, IMAGEUID, Month_bl, Month, M, update_stamp))
ivars[,1], nivars[,1]
ivars[,1]+ nivars[,1]
ivars[,1] and nivars[,1]
ivars[,1] == "SIDE"
nivars[,1] == "SIDE"
rm(col)
View(dat)
# Define Variables of Interest & Order
long_dat <- dat[, c(ivars[,1], nivars[,1])] %>%
arrange(RID, EXAMDATE) %>%
rename(DX_bas = DX_bl) %>%
subset(select = -c(SITE, COLPROT, ORIGPROT, EXAMDATE, FLDSTRENG, FSVERSION, IMAGEUID, Month_bl, Month, M, update_stamp))
View(long_dat)
length(unique(dat$VISCODE))
# From Long to Wide data format
wide_dat <- long_dat %>% pivot_wider(
names_from = VISCODE,
id_cols = ivars,
values_from = nivars,
names_repair = unique
)
# From Long to Wide data format
wide_dat <- long_dat %>% pivot_wider(
names_from = VISCODE,
id_cols = ivars[,1],
values_from = nivars[,1],
names_repair = unique
)
knitr::opts_chunk$set(echo = TRUE)
dat <- read.csv("data/ADNIMERGE.csv")
time_test <- function(data, idvar, tvar) {
x <- data[, c(idvar, tvar)] %>% arrange(tvar)
time_dependent <- FALSE
unique_participants <- unique(x[, 1])
for (participant in unique_participants) {
participant_data <- x[x[, 1] == participant, 2]
if (length(unique(participant_data)) > 1) {
time_dependent <- TRUE
break
}
}
if (time_dependent) {
return(data.frame(variable = tvar, status = "Time Dependent"))
} else {
return(data.frame(variable = tvar, status = "Time Independent"))
}
}
results <- data.frame(variable = character(), status = character(), stringsAsFactors = FALSE)
for (col in 1:length(colnames(dat))) {
result <- time_test(dat, "RID", colnames(dat)[col])
results <- rbind(results, result)
}
rm(result)
ivars <- subset(results, status=="Time Independent") %>% subset(select = -c(
SITE, COLPROT, ORIGPROT, EXAMDATE, FLDSTRENG, FSVERSION,IMAGEUID, Month_bl,
Month, M, update_stamp))
ivars <- subset(results, status=="Time Independent") %>% subset(select = -c(
COLPROT, ORIGPROT, EXAMDATE, FLDSTRENG, FSVERSION,IMAGEUID, Month_bl,
Month, M, update_stamp))
ivars <- subset(results, status=="Time Independent") %>% subset(select = -c(
ORIGPROT, EXAMDATE, FLDSTRENG, FSVERSION,IMAGEUID, Month_bl,
Month, M, update_stamp))
ivars <- subset(results, status=="Time Independent") %>% subset(select = -c(
EXAMDATE, FLDSTRENG, FSVERSION,IMAGEUID, Month_bl,
Month, M, update_stamp))
ivars <- subset(results, status=="Time Independent") %>% subset(select = -c(
, Month_bl,
Month, M, update_stamp))
ivars <- subset(results, status=="Time Independent") %>% subset(select = -c(
Month_bl,
Month, M, update_stamp))
ivars <- subset(results, status=="Time Independent") %>% subset(select = -c(
Month, M, update_stamp))
ivars <- subset(results, status=="Time Independent")
nivars <- subset(results, status=="Time Dependent")%>% subset(select = -c(
SITE, COLPROT, ORIGPROT, EXAMDATE, FLDSTRENG, FSVERSION,IMAGEUID, Month_bl,
Month, M, update_stamp))
View(nivars)
View(ivars)
ivars <- subset(results, status=="Time Independent") %>% subset(select=-c(SITE))
View(ivars)
View(ivars)
ivars <- subset(results, status=="Time Independent") %>% select=-any_of(
SITE, COLPROT, ORIGPROT, EXAMDATE, FLDSTRENG, FSVERSION,IMAGEUID, Month_bl,
Month, M, update_stamp))
ivars <- subset(results, status=="Time Independent") %>% select=-any_of(
SITE, COLPROT, ORIGPROT, EXAMDATE, FLDSTRENG, FSVERSION,IMAGEUID, Month_bl,
Month, M, update_stamp)
ivars <- subset(results, status=="Time Independent") %>% select(-any_of(
SITE, COLPROT, ORIGPROT, EXAMDATE, FLDSTRENG, FSVERSION,IMAGEUID, Month_bl,
Month, M, update_stamp))
ivars <- subset(results, status=="Time Independent") %>%
select(-any_of(c("SITE","COLPROT","ORIGPROT","EXAMDATE","FLDSTRENG",
"FSVERSION","IMAGEUID", "Month_bl","Month","M",
"update_stamp")))
View(ivars)
knitr::opts_chunk$set(echo = TRUE)
dat <- read.csv("data/ADNIMERGE.csv")
time_test <- function(data, idvar, tvar) {
x <- data[, c(idvar, tvar)] %>% arrange(tvar)
time_dependent <- FALSE
unique_participants <- unique(x[, 1])
for (participant in unique_participants) {
participant_data <- x[x[, 1] == participant, 2]
if (length(unique(participant_data)) > 1) {
time_dependent <- TRUE
break
}
}
if (time_dependent) {
return(data.frame(variable = tvar, status = "Time Dependent"))
} else {
return(data.frame(variable = tvar, status = "Time Independent"))
}
}
results <- data.frame(variable = character(), status = character(), stringsAsFactors = FALSE)
for (col in 1:length(colnames(dat))) {
result <- time_test(dat, "RID", colnames(dat)[col])
results <- rbind(results, result)
}
rm(result)
ivars <- subset(results, status=="Time Independent") %>%
select(-any_of(c("SITE","COLPROT","ORIGPROT","EXAMDATE","FLDSTRENG",
"FSVERSION","IMAGEUID", "Month_bl","Month","M",
"update_stamp")))
nivars <- subset(results, status=="Time Dependent") %>%
select(-any_of(c("SITE","COLPROT","ORIGPROT","EXAMDATE","FLDSTRENG",
"FSVERSION","IMAGEUID", "Month_bl","Month","M",
"update_stamp")))
View(nivars)
View(nivars)
View(ivars)
ivars <- subset(results, status=="Time Independent") %>%
subset(variable-any_of(c("SITE","COLPROT","ORIGPROT","EXAMDATE","FLDSTRENG",
"FSVERSION","IMAGEUID", "Month_bl","Month","M",
"update_stamp")))
nivars <- subset(results, status=="Time Dependent") %>%
slice(any_of(c("SITE","COLPROT","ORIGPROT","EXAMDATE","FLDSTRENG",
"FSVERSION","IMAGEUID", "Month_bl","Month","M",
"update_stamp")))
?select()
nivars <- subset(results, status=="Time Dependent") %>%
slice(c("SITE","COLPROT","ORIGPROT","EXAMDATE","FLDSTRENG",
"FSVERSION","IMAGEUID", "Month_bl","Month","M",
"update_stamp"))
nivars <- subset(results, status=="Time Dependent") %>%
subset(variable = c("SITE","COLPROT","ORIGPROT","EXAMDATE","FLDSTRENG",
"FSVERSION","IMAGEUID", "Month_bl","Month","M",
"update_stamp"))
nivars <- subset(results, status=="Time Dependent") %>%
subset(variable != c("SITE","COLPROT","ORIGPROT","EXAMDATE","FLDSTRENG",
"FSVERSION","IMAGEUID", "Month_bl","Month","M",
"update_stamp"))
ivars <- subset(results, status=="Time Independent") %>%
subset(variable != c("SITE","COLPROT","ORIGPROT","EXAMDATE","FLDSTRENG",
"FSVERSION","IMAGEUID", "Month_bl","Month","M",
"update_stamp"))
View(ivars)
ivars <- subset(results, status=="Time Independent") %>%
subset(variable != "SITE"|"COLPROT")
ivars <- subset(results, status=="Time Independent") %>%
subset(variable != c("SITE"|"COLPROT"))
ivars <- subset(results, status=="Time Independent") %>%
subset(variable != "SITE")
View(ivars)
ivars <- subset(results, status=="Time Independent") %>%
subset(variable != "SITE"|"COLPROT")
ivars <- subset(results, status=="Time Independent") %>%
subset(variable != "SITE"&"COLPROT")
ivars <- subset(results, status=="Time Independent") %>%
subset(variable != "SITE","COLPROT")
ivars <- subset(results, status=="Time Independent") %>%
subset(variable != ("SITE","COLPROT"))
ivars <- subset(results, status=="Time Independent") %>%
subset(variable != c("SITE","COLPROT"))
View(ivars)
time_test <- function(data, idvar, tvar) {
x <- data[, c(idvar, tvar)] %>% arrange(tvar)
time_dependent <- FALSE
unique_participants <- unique(x[, 1])
for (participant in unique_participants) {
participant_data <- x[x[, 1] == participant, 2]
if (length(unique(participant_data)) > 1) {
time_dependent <- TRUE
break
}
}
if (time_dependent) {
return(data.frame(variable = tvar, status = "Time Dependent"))
} else {
return(data.frame(variable = tvar, status = "Time Independent"))
}
}
results <- data.frame(variable = character(), status = character(), stringsAsFactors = FALSE)
for (col in 1:length(colnames(dat))) {
result <- time_test(dat, "RID", colnames(dat)[col])
results <- rbind(results, result)
}
rm(result)
ivars <- subset(results, status=="Time Independent") %>%
subset(variable != c("SITE","COLPROT"))
View(ivars)
knitr::opts_chunk$set(echo = TRUE)
dat <- read.csv("data/ADNIMERGE.csv")
time_test <- function(data, idvar, tvar) {
x <- data[, c(idvar, tvar)] %>% arrange(tvar)
time_dependent <- FALSE
unique_participants <- unique(x[, 1])
for (participant in unique_participants) {
participant_data <- x[x[, 1] == participant, 2]
if (length(unique(participant_data)) > 1) {
time_dependent <- TRUE
break
}
}
if (time_dependent) {
return(data.frame(variable = tvar, status = "Time Dependent"))
} else {
return(data.frame(variable = tvar, status = "Time Independent"))
}
}
results <- data.frame(variable = character(), status = character(), stringsAsFactors = FALSE)
for (col in 1:length(colnames(dat))) {
result <- time_test(dat, "RID", colnames(dat)[col])
results <- rbind(results, result)
}
rm(result)
ivars <- subset(results, status=="Time Independent") %>%
subset(variable != c("SITE","COLPROT","ORIGPROT","EXAMDATE","FLDSTRENG",
"FSVERSION","IMAGEUID", "Month_bl","Month","M",
"update_stamp"))
nivars <- subset(results, status=="Time Dependent") %>%
subset(variable != c("SITE","COLPROT","ORIGPROT","EXAMDATE","FLDSTRENG",
"FSVERSION","IMAGEUID", "Month_bl","Month","M",
"update_stamp"))
View(ivars)
View(nivars)
excluded_variables <- c("SITE","COLPROT","ORIGPROT","EXAMDATE","FLDSTRENG",
"FSVERSION","IMAGEUID", "Month_bl","Month","M",
"update_stamp")
ivars <- subset(results, status=="Time Independent") %>%
subset(!(variable %in% excluded_names))
exclude <- c("SITE","COLPROT","ORIGPROT","EXAMDATE","FLDSTRENG",
"FSVERSION","IMAGEUID", "Month_bl","Month","M",
"update_stamp")
ivars <- subset(results, status=="Time Independent") %>%
subset(!(variable %in% exclude))
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
dat <- read.csv("data/ADNIMERGE.csv")
time_test <- function(data, idvar, tvar) {
x <- data[, c(idvar, tvar)] %>% arrange(tvar)
time_dependent <- FALSE
unique_participants <- unique(x[, 1])
for (participant in unique_participants) {
participant_data <- x[x[, 1] == participant, 2]
if (length(unique(participant_data)) > 1) {
time_dependent <- TRUE
break
}
}
if (time_dependent) {
return(data.frame(variable = tvar, status = "Time Dependent"))
} else {
return(data.frame(variable = tvar, status = "Time Independent"))
}
}
results <- data.frame(variable = character(), status = character(), stringsAsFactors = FALSE)
for (col in 1:length(colnames(dat))) {
result <- time_test(dat, "RID", colnames(dat)[col])
results <- rbind(results, result)
}
rm(result)
exclude <- c("SITE","COLPROT","ORIGPROT","EXAMDATE","FLDSTRENG",
"FSVERSION","IMAGEUID", "Month_bl","Month","M",
"update_stamp")
ivars <- subset(results, status=="Time Independent") %>%
subset(!(variable %in% exclude))
nivars <- subset(results, status=="Time Dependent") %>%
subset(!(variable %in% exclude))
View(ivars)
View(nivars)
# Define Variables of Interest & Order
long_dat <- dat[, c(ivars[,1], nivars[,1])] %>%
arrange(RID, EXAMDATE) %>%
rename(DX_bas = DX_bl) %>%
# Define Variables of Interest & Order
long_dat <- dat[, c(ivars[,1], nivars[,1])] %>%
arrange(RID, EXAMDATE) %>%
rename(DX_bas = DX_bl)
# Define Variables of Interest & Order
long_dat <- dat[, c(ivars[,1], nivars[,1])] %>%
arrange(RID, EXAMDATE) %>%
rename(DX_bas = DX_bl)
View(ivars)
View(ivars)
View(nivars)
# Define Variables of Interest & Order
long_dat <- dat[, c(ivars[,1], nivars[,1])] %>%
arrange(RID, VISCODE) %>%
rename(DX_bas = DX_bl)
View(long_dat)
# Define Variables of Interest & Order
long_dat <- dat[, c(ivars[,1], nivars[,1])] %>%
relocate(VISCODE) %>%
arrange(RID, VISCODE) %>%
rename(DX_bas = DX_bl)
View(long_dat)
# Define Variables of Interest & Order
long_dat <- dat[, c(ivars[,1], nivars[,1])] %>%
relocate(RID, VISCODE) %>%
arrange(RID, VISCODE) %>%
rename(DX_bas = DX_bl)
View(long_dat)
# Define Variables of Interest & Order
long_dat <- dat[, c(ivars[,1], nivars[,1])] %>%
relocate(RID, PTID, VISCODE) %>%
arrange(RID, VISCODE) %>%
rename(DX_bas = DX_bl)
length(ivar[,1]=="EXAMDATE")
length(ivars[,1]=="EXAMDATE")
View(ivars)
length(ivars=="EXAMDATE")
View(nivars)
knitr::opts_chunk$set(echo = TRUE)
dat <- read.csv("data/ADNIMERGE.csv")
time_test <- function(data, idvar, tvar) {
x <- data[, c(idvar, tvar)] %>% arrange(tvar)
time_dependent <- FALSE
unique_participants <- unique(x[, 1])
for (participant in unique_participants) {
participant_data <- x[x[, 1] == participant, 2]
if (length(unique(participant_data)) > 1) {
time_dependent <- TRUE
break
}
}
if (time_dependent) {
return(data.frame(variable = tvar, status = "Time Dependent"))
} else {
return(data.frame(variable = tvar, status = "Time Independent"))
}
}
results <- data.frame(variable = character(), status = character(), stringsAsFactors = FALSE)
for (col in 1:length(colnames(dat))) {
result <- time_test(dat, "RID", colnames(dat)[col])
results <- rbind(results, result)
}
rm(result)
exclude <- c("SITE","COLPROT","ORIGPROT","FLDSTRENG",
"FSVERSION","IMAGEUID", "Month_bl","Month","M",
"update_stamp")
ivars <- subset(results, status=="Time Independent") %>%
subset(!(variable %in% exclude))
nivars <- subset(results, status=="Time Dependent") %>%
subset(!(variable %in% exclude))
# Define Variables of Interest & Order
long_dat <- dat[, c(ivars[,1], nivars[,1])] %>%
relocate(RID, PTID, VISCODE) %>%
arrange(RID, VISCODE) %>%
rename(DX_bas = DX_bl)
View(long_dat)
# Define Variables of Interest & Order
long_dat <- dat[, c(ivars[,1], nivars[,1])] %>%
relocate(RID, PTID, EXAMDATE,VISCODE) %>%
arrange(RID, VISCODE) %>%
rename(DX_bas = DX_bl)
View(long_dat)
